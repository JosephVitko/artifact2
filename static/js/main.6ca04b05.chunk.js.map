{"version":3,"sources":["utils.js","logo.svg","TicTacToe.js","Dictionary.js","WithListLoading.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","capitalize","str","substr","toUpperCase","Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","calculateWinner","length","matchingRow","matchingColumn","matchingDiagonal","u","require","Entry","useState","show","setShow","handleClose","Card","style","width","Img","variant","src","image","Body","Title","word","Button","Modal","onHide","Header","closeButton","definition","Image","rounded","fluid","Footer","Dictionary","fetch","then","response","json","data","console","log","entries","Container","Row","map","entry","Col","renderEntry","image_url","WithListLoading","isLoading","textAlign","fontSize","Nav","lgShow","setLgShow","Navbar","bg","Brand","flex","Collapse","size","id","App","ListLoading","loading","appState","setAppState","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ca04b05.chunk.js","sourcesContent":["module.exports = {\r\n    capitalize: function(str) {\r\n        let firstLetter = str.substr(0, 1);\r\n        return firstLetter.toUpperCase() + str.substr(1);\r\n    },\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useContext } from 'react';\r\n\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button\r\n            className=\"square\"\r\n            onClick={() => { props.onClick({value: 'X'}) }}\r\n        >\r\n            {props.value}\r\n        </button>\r\n    )\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        return <Square\r\n            value={this.props.squares[i]}\r\n            onClick={() => this.props.onClick(i)}\r\n        />\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class Game extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null)\r\n            }],\r\n            xIsNext: true,\r\n        }\r\n    }\r\n    handleClick(i) {\r\n        const history = this.state.history\r\n        const current = history[history.length - 1]\r\n        const squares = current.squares.slice()\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O'\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares\r\n            }]),\r\n            xIsNext: !this.state.xIsNext,\r\n        })\r\n    }\r\n    render() {\r\n        const history = this.state.history\r\n        const current = history[history.length -1]\r\n        const winner = calculateWinner(current.squares)\r\n        let status\r\n        if (winner) {\r\n            status = 'Winner: ' + winner\r\n        } else {\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O')\r\n        }\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                    squares={current.squares}\r\n                    onClick={(i) => this.handleClick(i)}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ol>{/* TODO */}</ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    if (squares) {\r\n        for (let i = 0; i < squares.length; i++) {\r\n            const matchingRow = squares[i] && squares[i] === squares[i+1] && squares[i] === squares[i+2]\r\n            const matchingColumn = squares[i] && squares[i] === squares[i+3] && squares[i] === squares[i+6]\r\n            const matchingDiagonal = squares[i] && squares[i] === squares[i+4] && squares[i] === squares[i+8]\r\n            if (matchingRow || matchingColumn || matchingDiagonal) {\r\n                return squares[i]\r\n            }\r\n        }\r\n    }\r\n    return null\r\n}","import React, {useContext, useState} from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from \"react-bootstrap/Col\"\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Image from 'react-bootstrap/Image'\r\nconst u = require('./utils')\r\n\r\n\r\nfunction Entry(props) {\r\n    const [show, setShow] = useState(false)\r\n\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n    return (\r\n        <Card style={{ width: '18rem' }}>\r\n            <Card.Img variant=\"top\" src={ props.image } />\r\n            <Card.Body>\r\n                <Card.Title>\r\n                    { u.capitalize(props.word) }\r\n                </Card.Title>\r\n                <Button variant=\"dark\" onClick={handleShow}>Show Definition</Button>\r\n            </Card.Body>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Definition of <i>{ u.capitalize(props.word) }:</i>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    { props.definition }\r\n                    <br />\r\n                    <Image className='definition-image mt-4' src={ props.image } rounded fluid />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default class Dictionary extends React.Component {\r\n    componentDidMount() {\r\n        const apiUrl = 'https://josephvitko.herokuapp.com/api/engl1102/artifact2/get_data'\r\n        fetch(apiUrl)\r\n            .then((response) => {response.json()\r\n                .then(data => console.log('This is your data', data))})\r\n    }\r\n    render() {\r\n        const { entries } = this.props\r\n        if (!entries || entries.length < 1) return <p>No entries, sorry</p>\r\n        return (\r\n            <Container fluid>\r\n                <Row>\r\n                    {entries.map((entry) => {\r\n                        return (\r\n                            <Col>\r\n                                {this.renderEntry(entry)}\r\n                            </Col>\r\n                        )\r\n                    })}\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    renderEntry(entry) {\r\n        return <Entry\r\n            word={entry.word}\r\n            definition={entry.definition}\r\n            image={entry.image_url}\r\n        />\r\n    }\r\n}","import React from 'react'\r\n\r\nfunction WithListLoading(Component) {\r\n    return function WithLoadingComponent({ isLoading, ...props}) {\r\n        if (!isLoading) return <Component {...props} />\r\n        return (\r\n            <p style={{ textAlign: 'center', fontSize: '30px' }}>\r\n                Loading...\r\n            </p>\r\n        )\r\n    }\r\n}\r\nexport default WithListLoading;","import React, {useState} from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Image from 'react-bootstrap/Image'\r\n\r\nexport default function Nav() {\r\n    const [lgShow, setLgShow] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"primary\" variant=\"light\">\r\n                <Navbar.Brand >\r\n                    <Image src='https://i.pinimg.com/originals/e4/9d/ab/e49dabbdf15dc0ad2a6d039c0e785440.png' className='logo' flex/>\r\n                    <span className='fancy-font'>Chef's Dictionary</span>\r\n                </Navbar.Brand>\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Button variant=\"dark\" onClick={() => setLgShow(true)}>About</Button>\r\n                        <Modal\r\n                            size='lg'\r\n                            show={lgShow}\r\n                            onHide={() => setLgShow(false)}\r\n                        >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                                Greetings!\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <p className='text-wrap'>Are you someone just beginning to cook? Or do you often feel intimidated by the myriad of online recipes?  If so, you have come to the right place!</p>\r\n                            <p className='text-wrap'>Regardless of your reasons for visiting this dictionary, we hope that you will discover some new aspects of cooking and better understand the \"chef's jargon\".  In this dictionary, you will find a list of common culinary terminologies in written recipes.  While some of the words may look simple, they take on different meanings in a culinary context.  For this reason, we have included videos and pictures alongside the definitions to provide visual illustration.</p>\r\n                            <p className='text-wrap'>Enjoy your brief tour of the world of culinary arts!</p>\r\n                            <Image className='definition-image mt-4' src='https://lh4.googleusercontent.com/0AMLe363WySsmfH3JSYaOObRPY08L0IHPDd00axzyhDtZkYkTI-gfScGf791wXsyEXnqEl1MAaQ1SMogqS6SNqL0KO3oZXeXoXPbvWUztlgtfX6hiMvS_uJZgD9KkchraQ=w1280' rounded fluid />\r\n                        </Modal.Body>\r\n\r\n                        </Modal>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport Game from './TicTacToe'\nimport Dictionary from './Dictionary'\nimport WithListLoading from \"./WithListLoading\";\nimport {useEffect, useState} from \"react\";\nimport Nav from './Nav'\nimport Image from 'react-bootstrap/Image'\n\nfunction App() {\n  const ListLoading = WithListLoading(Dictionary)\n  const [appState, setAppState] = useState({\n    loading: false,\n    entries: null,\n  })\n\n  useEffect(() => {\n    setAppState({ loading: true })\n    const apiUrl = 'https://josephvitko.herokuapp.com/api/engl1102/artifact2/get_data'\n    fetch(apiUrl)\n        .then((response) => {response.json()\n            .then(data => {\n                console.log(data)\n              setAppState({ loading: false, entries: data['dictionary_entries']})\n            })\n        })\n  }, [setAppState])\n  return (\n      <div className='App'>\n          <Nav />\n          <div className='splash-container1'>\n              <Image src='https://i.ibb.co/CHMph7B/background1.png' className='splash-background'/>\n              <h1 className='splash-text fancy-font-big'>Dictionary of Culinary Terms</h1>\n              <span className='splash-subtitle'>Essential Words for Aspiring Cooks</span>\n          </div>\n\n        <div className='container'>\n            <div className='entry-container'>\n            <ListLoading isLoading={appState.loading} entries={appState.entries}/>\n            </div>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}